{"ast":null,"code":"var _jsxFileName = \"U:\\\\Java\\\\WaverApp\\\\frontend\\\\src\\\\Components\\\\WaveSubmit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProfileImage from './ProfileImage';\nimport * as apiCalls from '../api/apiCalls';\nimport ButtonWithProgress from './ButtonWithProgress';\nimport Input from './Input';\n\nclass WaveSubmit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      focused: false,\n      content: undefined,\n      pendingApiCall: false,\n      errors: {},\n      file: undefined,\n      image: undefined\n    };\n\n    this.onFocus = () => {\n      this.setState({\n        focused: true\n      });\n    };\n\n    this.onClickExtinguishWave = () => {\n      this.setState({\n        focused: false,\n        content: '',\n        errors: {}\n      });\n    };\n\n    this.onChangeContent = event => {\n      const value = event.target.value;\n      this.setState({\n        content: value,\n        errors: {}\n      });\n    };\n\n    this.onClickRunWave = () => {\n      const body = {\n        content: this.state.content\n      };\n      this.setState({\n        pendingApiCall: true\n      });\n      apiCalls.postWave(body).then(response => {\n        this.setState({\n          focused: false,\n          content: '',\n          pendingApiCall: false\n        });\n      }).catch(error => {\n        let errors = {};\n\n        if (error.response.data && error.response.data.validationErrors) {\n          errors = error.response.data.validationErrors;\n        }\n\n        this.setState({\n          pendingApiCall: false,\n          errors\n        });\n      });\n    };\n\n    this.onFileSelect = event => {\n      if (event.target.files.length === 0) {\n        return;\n      }\n\n      const errors = { ...this.state.errors\n      };\n      errors.image = undefined;\n      const file = event.target.files[0];\n      let reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          image: reader.result,\n          file\n        });\n      };\n\n      reader.readAsDataURL(file);\n    };\n  }\n\n  render() {\n    let textAreaClassName = \"form-control w-100\";\n\n    if (this.state.errors.content) {\n      textAreaClassName += \" is-invalid\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"card d-flex flex-row p-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(ProfileImage, {\n      className: \"rounded-circle m-1\",\n      width: \"32\",\n      height: \"32\",\n      image: this.props.loggedInUser.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flex-fill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: textAreaClassName,\n      rows: this.state.focused ? 3 : 1,\n      onFocus: this.onFocus,\n      value: this.state.content,\n      onChange: this.onChangeContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), this.state.errors.content && React.createElement(\"span\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, this.state.errors.content), this.state.focused && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"pt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"file\",\n      onChange: this.onFileSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), this.state.image && React.createElement(\"img\", {\n      className: \"mt-1 img-thumbnail\",\n      src: this.state.image,\n      alt: \"upload\",\n      width: \"128\",\n      height: \"64\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-right mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(ButtonWithProgress, {\n      className: \"btn btn-success\",\n      onClick: this.onClickRunWave,\n      disabled: this.state.pendingApiCall,\n      pendingApiCall: this.state.pendingApiCall,\n      text: \"Run wave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-light ml-1\",\n      onClick: this.onClickExtinguishWave,\n      disabled: this.state.pendingApiCall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, \"Extinguish wave\")))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state\n  };\n};\n\nexport default connect(mapStateToProps)(WaveSubmit);","map":{"version":3,"sources":["U:/Java/WaverApp/frontend/src/Components/WaveSubmit.js"],"names":["React","Component","connect","ProfileImage","apiCalls","ButtonWithProgress","Input","WaveSubmit","state","focused","content","undefined","pendingApiCall","errors","file","image","onFocus","setState","onClickExtinguishWave","onChangeContent","event","value","target","onClickRunWave","body","postWave","then","response","catch","error","data","validationErrors","onFileSelect","files","length","reader","FileReader","onloadend","result","readAsDataURL","render","textAreaClassName","props","loggedInUser","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ProfileImage from './ProfileImage';\r\nimport * as apiCalls from '../api/apiCalls';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\nimport Input from './Input';\r\n\r\nclass WaveSubmit extends Component {\r\n\r\n    state = {\r\n        focused: false,\r\n        content: undefined,\r\n        pendingApiCall: false,\r\n        errors: {},\r\n        file: undefined,\r\n        image: undefined,\r\n    }\r\n\r\n    onFocus = () => {\r\n        this.setState({focused: true});\r\n    }\r\n\r\n    onClickExtinguishWave = () => {\r\n        this.setState({\r\n            focused: false,\r\n            content: '',\r\n            errors: {},\r\n        });\r\n    }\r\n\r\n    onChangeContent = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({content: value, errors: {}});\r\n    }\r\n\r\n    onClickRunWave = () => {\r\n        const body = {\r\n            content: this.state.content,\r\n        };\r\n        this.setState({pendingApiCall: true});\r\n        apiCalls.postWave(body)\r\n            .then((response) => {\r\n                this.setState({\r\n                    focused: false,\r\n                    content: '',\r\n                    pendingApiCall: false,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let errors = {}\r\n                if (error.response.data && error.response.data.validationErrors){\r\n                    errors = error.response.data.validationErrors;\r\n                }\r\n                this.setState({\r\n                    pendingApiCall: false,\r\n                    errors,\r\n                });\r\n            });\r\n    }\r\n\r\n    onFileSelect = (event) => {\r\n        if (event.target.files.length === 0){\r\n            return;\r\n        }\r\n        const errors = {...this.state.errors};\r\n        errors.image = undefined;\r\n        const file = event.target.files[0];\r\n        let reader = new FileReader();\r\n        reader.onloadend = () => {\r\n            this.setState({\r\n                image: reader.result,\r\n                file\r\n            })\r\n        }\r\n        reader.readAsDataURL(file);\r\n    }\r\n\r\n    render() {\r\n        let textAreaClassName = \"form-control w-100\";\r\n        if (this.state.errors.content){\r\n            textAreaClassName += \" is-invalid\"\r\n        }\r\n        return (\r\n            <div className = \"card d-flex flex-row p-1\">\r\n                <ProfileImage\r\n                    className = \"rounded-circle m-1\"\r\n                    width = \"32\"\r\n                    height = \"32\"\r\n                    image = {this.props.loggedInUser.image}\r\n                />\r\n                <div className = \"flex-fill\">\r\n                    <textarea \r\n                        className = {textAreaClassName} \r\n                        rows = {this.state.focused ? 3 : 1}\r\n                        onFocus = {this.onFocus}\r\n                        value = {this.state.content}\r\n                        onChange = {this.onChangeContent}\r\n                    /> \r\n                    {this.state.errors.content && (<span className = \"invalid-feedback\">{this.state.errors.content}</span>)}\r\n                    {this.state.focused && (\r\n                        <div>\r\n                            <div \r\n                                className=\"pt-1\"\r\n                            \r\n                            >\r\n                                <Input\r\n                                    type = \"file\"\r\n                                    onChange={this.onFileSelect}\r\n                                />\r\n                                {this.state.image && \r\n                                <img \r\n                                    className=\"mt-1 img-thumbnail\" \r\n                                    src = {this.state.image} \r\n                                    alt=\"upload\" \r\n                                    width=\"128\"\r\n                                    height=\"64\"\r\n                                />}    \r\n                            </div>\r\n                            <div className = \"text-right mt-1\">\r\n                                <ButtonWithProgress \r\n                                    className = \"btn btn-success\"\r\n                                    onClick = {this.onClickRunWave}    \r\n                                    disabled = {this.state.pendingApiCall}\r\n                                    pendingApiCall = {this.state.pendingApiCall}\r\n                                    text = \"Run wave\"\r\n                                >\r\n                                </ButtonWithProgress>  \r\n                                <button \r\n                                    className = \"btn btn-light ml-1\" \r\n                                    onClick = {this.onClickExtinguishWave}\r\n                                    disabled = {this.state.pendingApiCall}\r\n                                >\r\n                                    Extinguish wave\r\n                                </button>\r\n                            </div>  \r\n                        </div>\r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WaveSubmit);"]},"metadata":{},"sourceType":"module"}