{"ast":null,"code":"var _jsxFileName = \"U:\\\\Java\\\\WaverApp\\\\frontend\\\\src\\\\Components\\\\WaveFeed.js\";\nimport React, { Component } from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport Spinner from './Spinner';\nimport WaveView from './WaveView';\n\nclass WaveFeed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: {\n        content: []\n      },\n      isLoadingWaves: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoadingWaves: true\n    });\n    apiCalls.loadWaves(this.props.user).then(response => {\n      this.setState({\n        page: response.data,\n        isLoadingWaves: false\n      });\n    });\n  }\n\n  render() {\n    if (this.state.isLoadingWaves) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.page.content.length === 0) {\n      return React.createElement(\"div\", {\n        className: \"card card-header text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, \"There are no waves\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, this.state.page.content.map(wave => {\n      return React.createElement(WaveView, {\n        key: wave.id,\n        wave: wave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      });\n    }), this.state.page.last === false && React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Load More\"));\n  }\n\n}\n\nexport default WaveFeed;","map":{"version":3,"sources":["U:/Java/WaverApp/frontend/src/Components/WaveFeed.js"],"names":["React","Component","apiCalls","Spinner","WaveView","WaveFeed","state","page","content","isLoadingWaves","componentDidMount","setState","loadWaves","props","user","then","response","data","render","length","map","wave","id","last"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAE7BK,KAF6B,GAErB;AACJC,MAAAA,IAAI,EAAC;AACDC,QAAAA,OAAO,EAAE;AADR,OADD;AAIJC,MAAAA,cAAc,EAAE;AAJZ,KAFqB;AAAA;;AAS7BC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,QAAL,CAAc;AAACF,MAAAA,cAAc,EAAE;AAAjB,KAAd;AACAP,IAAAA,QAAQ,CAACU,SAAT,CAAmB,KAAKC,KAAL,CAAWC,IAA9B,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,WAAKL,QAAL,CAAc;AAACJ,QAAAA,IAAI,EAAES,QAAQ,CAACC,IAAhB;AAAsBR,QAAAA,cAAc,EAAE;AAAtC,OAAd;AACH,KAHL;AAIH;;AAEDS,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKZ,KAAL,CAAWG,cAAf,EAA8B;AAC1B,aAAQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAR;AACH;;AACD,QAAI,KAAKH,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBW,MAAxB,KAAmC,CAAvC,EAAyC;AACrC,aACI;AAAK,QAAA,SAAS,EAAG,8BAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ;AAKH;;AACD,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF,KAAKb,KAAL,CAAWC,IAAX,CAAgBC,OAAhB,CAAwBY,GAAxB,CAA6BC,IAAD,IAAU;AACnC,aAAO,oBAAC,QAAD;AAAU,QAAA,GAAG,EAAIA,IAAI,CAACC,EAAtB;AAA0B,QAAA,IAAI,EAAID,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFA,CADE,EAIF,KAAKf,KAAL,CAAWC,IAAX,CAAgBgB,IAAhB,KAAyB,KAAzB,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALD,CAAP;AAUH;;AAtC4B;;AAyCjC,eAAelB,QAAf","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport * as apiCalls from '../api/apiCalls';\r\nimport Spinner from './Spinner';\r\nimport WaveView from './WaveView';\r\n\r\nclass WaveFeed extends Component {\r\n\r\n    state = {\r\n        page:{\r\n            content: []\r\n        },\r\n        isLoadingWaves: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({isLoadingWaves: true})\r\n        apiCalls.loadWaves(this.props.user)\r\n            .then(response => {\r\n                this.setState({page: response.data, isLoadingWaves: false});\r\n            });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoadingWaves){\r\n            return (<Spinner/>);\r\n        }\r\n        if (this.state.page.content.length === 0){\r\n            return (\r\n                <div className = \"card card-header text-center\">\r\n                    There are no waves\r\n                </div>\r\n            );\r\n        } \r\n        return <div>\r\n            {this.state.page.content.map((wave) => {\r\n                return <WaveView key = {wave.id} wave = {wave}/>\r\n            })}\r\n            {this.state.page.last === false && (\r\n                <div>\r\n                    Load More\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default WaveFeed;"]},"metadata":{},"sourceType":"module"}