{"ast":null,"code":"var _jsxFileName = \"U:\\\\Java\\\\WaverApp\\\\frontend\\\\src\\\\Pages\\\\UserPage.js\";\nimport React from 'react';\nimport * as apiCalls from '../api/apiCalls';\n\nclass UserPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: undefined,\n      userNotFound: false\n    };\n\n    this.componentDidMount = () => {\n      this.loadUser();\n    };\n\n    this.loadUser = () => {\n      const username = this.props.match.params.username;\n\n      if (!username) {\n        return;\n      }\n\n      this.setState({\n        userNotFound: false\n      });\n      apiCalls.getUser(username).then(response => {\n        this.setState({\n          user: response.data\n        });\n      }).catch(error => {\n        this.setState({\n          userNotFound: true\n        });\n      });\n    };\n\n    this.componentDidUpdate = prevProps => {\n      if (prevProps.match.params.username !== this.props.match.params.username) {\n        this.loadUser();\n      }\n    };\n  }\n\n  render() {\n    if (this.state.userNotFound) {\n      return React.createElement(\"div\", {\n        className: \"alert alert-danger text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"User not found\"));\n    }\n\n    return React.createElement(\"div\", {\n      \"data-testid\": \"userpage\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, this.state.user && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, `${this.state.user.displayName}@${this.state.user.username}`));\n  }\n\n}\n\nUserPage.defaultProps = {\n  match: {\n    params: {}\n  }\n};\nexport default UserPage;","map":{"version":3,"sources":["U:/Java/WaverApp/frontend/src/Pages/UserPage.js"],"names":["React","apiCalls","UserPage","Component","state","user","undefined","userNotFound","componentDidMount","loadUser","username","props","match","params","setState","getUser","then","response","data","catch","error","componentDidUpdate","prevProps","render","displayName","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,QAAZ,MAA0B,iBAA1B;;AAEA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;AAAA,SAEnCC,KAFmC,GAE3B;AACJC,MAAAA,IAAI,EAAEC,SADF;AAEJC,MAAAA,YAAY,EAAE;AAFV,KAF2B;;AAAA,SAOnCC,iBAPmC,GAOf,MAAM;AACtB,WAAKC,QAAL;AACH,KATkC;;AAAA,SAWnCA,QAXmC,GAWxB,MAAK;AACZ,YAAMC,QAAQ,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,QAAzC;;AACA,UAAI,CAACA,QAAL,EAAc;AACV;AACH;;AACD,WAAKI,QAAL,CAAc;AAACP,QAAAA,YAAY,EAAE;AAAf,OAAd;AACAN,MAAAA,QAAQ,CAACc,OAAT,CAAiBL,QAAjB,EACKM,IADL,CACWC,QAAD,IAAc;AAChB,aAAKH,QAAL,CAAc;AAACT,UAAAA,IAAI,EAAEY,QAAQ,CAACC;AAAhB,SAAd;AACH,OAHL,EAIKC,KAJL,CAIWC,KAAK,IAAI;AACZ,aAAKN,QAAL,CAAc;AAACP,UAAAA,YAAY,EAAE;AAAf,SAAd;AACH,OANL;AAOH,KAxBkC;;AAAA,SAyBnCc,kBAzBmC,GAyBbC,SAAD,IAAe;AAChC,UAAGA,SAAS,CAACV,KAAV,CAAgBC,MAAhB,CAAuBH,QAAvB,KAAoC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,QAA/D,EAAwE;AACpE,aAAKD,QAAL;AACH;AACJ,KA7BkC;AAAA;;AA+BnCc,EAAAA,MAAM,GAAE;AACJ,QAAI,KAAKnB,KAAL,CAAWG,YAAf,EAA4B;AACxB,aACI;AAAK,QAAA,SAAS,EAAG,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CADJ;AAKH;;AACD,WACI;AAAK,qBAAc,UAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKH,KAAL,CAAWC,IAAX,IACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,GAAE,KAAKD,KAAL,CAAWC,IAAX,CAAgBmB,WAAY,IAAG,KAAKpB,KAAL,CAAWC,IAAX,CAAgBK,QAAS,EADhE,CAFR,CADJ;AASH;;AAhDkC;;AAmDvCR,QAAQ,CAACuB,YAAT,GAAwB;AACpBb,EAAAA,KAAK,EAAE;AACHC,IAAAA,MAAM,EAAE;AADL;AADa,CAAxB;AAMA,eAAeX,QAAf","sourcesContent":["import React from 'react';\r\n\r\nimport * as apiCalls from '../api/apiCalls';\r\n\r\nclass UserPage extends React.Component {\r\n    \r\n    state = {\r\n        user: undefined,\r\n        userNotFound: false,\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.loadUser();\r\n    }\r\n\r\n    loadUser = () =>{\r\n        const username = this.props.match.params.username;\r\n        if (!username){\r\n            return;\r\n        }\r\n        this.setState({userNotFound: false})\r\n        apiCalls.getUser(username)\r\n            .then((response) => {\r\n                this.setState({user: response.data})\r\n            })\r\n            .catch(error => {\r\n                this.setState({userNotFound: true})\r\n            });\r\n    }\r\n    componentDidUpdate = (prevProps) => {\r\n        if(prevProps.match.params.username !== this.props.match.params.username){\r\n            this.loadUser();\r\n        }\r\n    }\r\n\r\n    render(){\r\n        if (this.state.userNotFound){\r\n            return (\r\n                <div className = \"alert alert-danger text-center\">\r\n                    <h5>User not found</h5>\r\n                </div>\r\n            )\r\n        }\r\n        return(\r\n            <div data-testid = \"userpage\">\r\n                {this.state.user && (\r\n                    <span>\r\n                        {`${this.state.user.displayName}@${this.state.user.username}`}\r\n                    </span>\r\n                )}\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nUserPage.defaultProps = {\r\n    match: {\r\n        params: {}\r\n    }\r\n}\r\n\r\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}