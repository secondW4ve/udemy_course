{"ast":null,"code":"var _jsxFileName = \"U:\\\\Java\\\\WaverApp\\\\frontend\\\\src\\\\Components\\\\WaveFeed.js\";\nimport React, { Component } from 'react';\nimport * as apiCalls from '../api/apiCalls';\nimport Spinner from './Spinner';\nimport WaveView from './WaveView';\n\nclass WaveFeed extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      page: {\n        content: []\n      },\n      isLoadingWaves: false\n    };\n\n    this.checkCount = () => {\n      const waves = this.state.page.content;\n\n      if (waves.length === 0) {\n        return;\n      }\n\n      const topWave = waves[0];\n      apiCalls.loadNewWaveCount(topWave.id);\n    };\n\n    this.onClickLoadMore = () => {\n      const waves = this.state.page.content;\n\n      if (waves.length === 0) {\n        return;\n      }\n\n      const waveAtBottom = waves[waves.length - 1];\n      apiCalls.loadOldWaves(waveAtBottom.id, this.props.user).then(response => {\n        const page = { ...this.state.page\n        };\n        page.content = [...page.content, ...response.data.content];\n        page.last = response.data.last;\n        this.setState({\n          page\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isLoadingWaves: true\n    });\n    apiCalls.loadWaves(this.props.user).then(response => {\n      this.setState({\n        page: response.data,\n        isLoadingWaves: false\n      }, this.checkCount);\n    });\n  }\n\n  render() {\n    if (this.state.isLoadingWaves) {\n      return React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      });\n    }\n\n    if (this.state.page.content.length === 0) {\n      return React.createElement(\"div\", {\n        className: \"card card-header text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"There are no waves\");\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.state.page.content.map(wave => {\n      return React.createElement(WaveView, {\n        key: wave.id,\n        wave: wave,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      });\n    }), this.state.page.last === false && React.createElement(\"div\", {\n      className: \"card card-header text-center\",\n      onClick: this.onClickLoadMore,\n      style: {\n        cursor: 'pointer'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Load More\"));\n  }\n\n}\n\nexport default WaveFeed;","map":{"version":3,"sources":["U:/Java/WaverApp/frontend/src/Components/WaveFeed.js"],"names":["React","Component","apiCalls","Spinner","WaveView","WaveFeed","state","page","content","isLoadingWaves","checkCount","waves","length","topWave","loadNewWaveCount","id","onClickLoadMore","waveAtBottom","loadOldWaves","props","user","then","response","data","last","setState","componentDidMount","loadWaves","render","map","wave","cursor"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport * as apiCalls from '../api/apiCalls';\r\nimport Spinner from './Spinner';\r\nimport WaveView from './WaveView';\r\n\r\nclass WaveFeed extends Component {\r\n\r\n    state = {\r\n        page:{\r\n            content: []\r\n        },\r\n        isLoadingWaves: false,\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.setState({isLoadingWaves: true})\r\n        apiCalls.loadWaves(this.props.user)\r\n            .then(response => {\r\n                this.setState({page: response.data, isLoadingWaves: false},\r\n                    this.checkCount);\r\n            });\r\n    }\r\n\r\n    checkCount = () => {\r\n        const waves = this.state.page.content;\r\n        if (waves.length === 0){\r\n            return;\r\n        }\r\n        const topWave = waves[0];\r\n        apiCalls.loadNewWaveCount(topWave.id);\r\n    }\r\n\r\n    onClickLoadMore = () => {\r\n        const waves = this.state.page.content;\r\n        if (waves.length === 0){\r\n            return;\r\n        }\r\n        const waveAtBottom = waves[waves.length - 1];\r\n        apiCalls.loadOldWaves(waveAtBottom.id, this.props.user)\r\n            .then(response => {\r\n                const page = {...this.state.page};\r\n                page.content = [...page.content, ...response.data.content];\r\n                page.last = response.data.last;\r\n                this.setState({page});\r\n            })\r\n    }\r\n\r\n    render() {\r\n        if (this.state.isLoadingWaves){\r\n            return (<Spinner/>);\r\n        }\r\n        if (this.state.page.content.length === 0){\r\n            return (\r\n                <div className = \"card card-header text-center\">\r\n                    There are no waves\r\n                </div>\r\n            );\r\n        } \r\n        return <div>\r\n            {this.state.page.content.map((wave) => {\r\n                return <WaveView key = {wave.id} wave = {wave}/>\r\n            })}\r\n            {this.state.page.last === false && (\r\n                <div \r\n                    className = \"card card-header text-center\"\r\n                    onClick = {this.onClickLoadMore}\r\n                    style = {{cursor: 'pointer'}}\r\n                >\r\n                    Load More\r\n                </div>\r\n            )}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default WaveFeed;"]},"metadata":{},"sourceType":"module"}