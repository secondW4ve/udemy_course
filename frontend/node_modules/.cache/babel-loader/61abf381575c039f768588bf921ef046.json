{"ast":null,"code":"var _jsxFileName = \"U:\\\\Java\\\\WaverApp\\\\frontend\\\\src\\\\Pages\\\\UserSignupPage.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport Input from '../Components/Input';\nimport ButtonWithProgress from '../Components/ButtonWithProgress';\nexport class UserSignupPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayName: '',\n      username: '',\n      password: '',\n      repeatedPassword: '',\n      pendingApiCall: false,\n      errors: {},\n      passwordRepeatConfirmed: true\n    };\n\n    this.onChangeDisplayName = event => {\n      const value = event.target.value;\n      const errors = { ...this.state.errors\n      };\n      delete errors.displayName;\n      this.setState({\n        displayName: value,\n        errors\n      });\n    };\n\n    this.onChangeUsername = event => {\n      const value = event.target.value;\n      const errors = { ...this.state.errors\n      };\n      delete errors.username;\n      this.setState({\n        username: value,\n        errors\n      });\n    };\n\n    this.onChangePassword = event => {\n      const value = event.target.value;\n      const passwordRepeatConfirmed = this.state.repeatedPassword === value;\n      const errors = { ...this.state.errors\n      };\n      delete errors.password;\n      errors.repeatedPassword = passwordRepeatConfirmed ? '' : 'Doesnt match to password';\n      this.setState({\n        password: value,\n        passwordRepeatConfirmed,\n        errors\n      });\n    };\n\n    this.onChangeRepeatPassword = event => {\n      const value = event.target.value;\n      const passwordRepeatConfirmed = this.state.password === value;\n      const errors = { ...this.state.errors\n      };\n      errors.repeatedPassword = passwordRepeatConfirmed ? '' : 'Doesnt match to password';\n      this.setState({\n        repeatedPassword: value,\n        passwordRepeatConfirmed,\n        errors\n      });\n    };\n\n    this.onClickSignup = () => {\n      const user = {\n        username: this.state.username,\n        displayName: this.state.displayName,\n        password: this.state.password\n      };\n      this.setState({\n        pendingApiCall: true\n      });\n      this.props.actions.postSignup(user).then(response => {\n        /*this.setState({pendingApiCall: false}, () => {\r\n            this.props.history.push('/')\r\n        });*/\n        const body = {\n          username: this.state.username,\n          password: this.state.password\n        };\n        this.setState({\n          pendingApiCall: true\n        });\n        this.props.actions.postLogin(body).then(response => {\n          const action = {\n            type: 'login-success',\n            payload: { ...response.data,\n              password: this.state.password\n            }\n          };\n          this.props.dispatch(action);\n          this.setState({\n            pendingApiCall: false\n          }, () => {\n            this.props.history.push('/');\n          });\n        }).catch(error => {\n          if (error.response) {\n            this.setState({\n              apiError: error.response.data.message,\n              pendingApiCall: false\n            });\n          }\n        });\n      }).catch(apiError => {\n        let errors = { ...this.state.errors\n        };\n\n        if (apiError.response.data && apiError.response.data.validationErrors) {\n          errors = { ...apiError.response.data.validationErrors\n          };\n        }\n\n        this.setState({\n          pendingApiCall: false,\n          errors\n        });\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      className: \"col-12 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: \"Display name\",\n      placeholder: \"Your display name\",\n      value: this.state.displayName,\n      onChange: this.onChangeDisplayName,\n      hasError: this.state.errors.displayName && true,\n      error: this.state.errors.displayName,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-12 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: \"User name\",\n      placeholder: \"Your user name\",\n      value: this.state.username,\n      onChange: this.onChangeUsername,\n      hasError: this.state.errors.username && true,\n      error: this.state.errors.username,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-12 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: \"Password\",\n      placeholder: \"Your password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: this.onChangePassword,\n      hasError: this.state.errors.password && true,\n      error: this.state.errors.password,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-12 mb-3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Input, {\n      label: \"Repeat your password\",\n      placeholder: \"Repeat your password\",\n      type: \"password\",\n      value: this.state.repeatedPassword,\n      onChange: this.onChangeRepeatPassword,\n      hasError: this.state.errors.repeatedPassword && true,\n      error: this.state.errors.repeatedPassword,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(ButtonWithProgress, {\n      onClick: this.onClickSignup,\n      disabled: this.state.pendingApiCall || !this.state.passwordRepeatConfirmed,\n      pendingApiCall: this.state.pendingApiCall,\n      text: \"Sign up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    })));\n  }\n\n}\nUserSignupPage.defaultProps = {\n  actions: {\n    postSignup: () => new Promise((resolve, reject) => {\n      resolve({});\n    })\n  },\n  history: {\n    push: () => {}\n  }\n};\nexport default connect()(UserSignupPage);","map":{"version":3,"sources":["U:/Java/WaverApp/frontend/src/Pages/UserSignupPage.js"],"names":["React","connect","Input","ButtonWithProgress","UserSignupPage","Component","state","displayName","username","password","repeatedPassword","pendingApiCall","errors","passwordRepeatConfirmed","onChangeDisplayName","event","value","target","setState","onChangeUsername","onChangePassword","onChangeRepeatPassword","onClickSignup","user","props","actions","postSignup","then","response","body","postLogin","action","type","payload","data","dispatch","history","push","catch","error","apiError","message","validationErrors","render","defaultProps","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport Input from '../Components/Input';\r\nimport ButtonWithProgress from '../Components/ButtonWithProgress';\r\n\r\nexport class UserSignupPage extends React.Component{\r\n\r\n    state = {\r\n        displayName: '',\r\n        username: '',\r\n        password: '',\r\n        repeatedPassword: '',\r\n        pendingApiCall: false,\r\n        errors: {},\r\n        passwordRepeatConfirmed: true\r\n    }\r\n\r\n    onChangeDisplayName = (event) => {\r\n        const value = event.target.value;\r\n        const errors = { ...this.state.errors};\r\n        delete errors.displayName;\r\n        this.setState({displayName: value, errors})\r\n    }\r\n\r\n    onChangeUsername = (event) => {\r\n        const value = event.target.value;\r\n        const errors = {...this.state.errors};\r\n        delete errors.username;\r\n        this.setState({username: value, errors});\r\n    }\r\n\r\n    onChangePassword = (event) => {\r\n        const value = event.target.value;\r\n        const passwordRepeatConfirmed = this.state.repeatedPassword === value;\r\n        const errors = {...this.state.errors};\r\n        delete errors.password;\r\n        errors.repeatedPassword = passwordRepeatConfirmed ? '' : 'Doesnt match to password';\r\n        this.setState({password: value, passwordRepeatConfirmed, errors});\r\n    }\r\n\r\n    onChangeRepeatPassword = (event) => {\r\n        const value = event.target.value;\r\n        const passwordRepeatConfirmed = this.state.password === value;\r\n        const errors = {...this.state.errors};\r\n        errors.repeatedPassword = passwordRepeatConfirmed ? '' : 'Doesnt match to password';\r\n        this.setState({repeatedPassword: value, passwordRepeatConfirmed, errors});\r\n    }\r\n\r\n    onClickSignup = () => {\r\n        const user = {\r\n            username: this.state.username,\r\n            displayName: this.state.displayName,\r\n            password: this.state.password\r\n        }\r\n        this.setState({pendingApiCall: true});\r\n        this.props.actions.postSignup(user)\r\n            .then(response => {\r\n                /*this.setState({pendingApiCall: false}, () => {\r\n                    this.props.history.push('/')\r\n                });*/\r\n                const body = {\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                }\r\n                this.setState({pendingApiCall: true})\r\n                this.props.actions\r\n                    .postLogin(body)\r\n                    .then((response) => {\r\n                        const action = {\r\n                            type: 'login-success',\r\n                            payload: {\r\n                                ...response.data,\r\n                                password: this.state.password,\r\n                            }\r\n                        };\r\n                        this.props.dispatch(action);\r\n                        this.setState({pendingApiCall: false}, () => {\r\n                            this.props.history.push('/');\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                    if (error.response){\r\n                        this.setState({apiError: error.response.data.message, pendingApiCall: false})\r\n                    }        \r\n                });\r\n            })\r\n            .catch(apiError => {\r\n                let errors = { ...this.state.errors};\r\n                if (apiError.response.data && apiError.response.data.validationErrors){\r\n                    errors = {...apiError.response.data.validationErrors};\r\n                }\r\n                this.setState({ pendingApiCall: false, errors });\r\n            });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"container\">\r\n                <h1 className = \"text-center\">Sign Up</h1>\r\n                <div className = \"col-12 mb-3\">\r\n                    <Input \r\n                        label = \"Display name\"\r\n                        placeholder = \"Your display name\" \r\n                        value = {this.state.displayName}\r\n                        onChange = {this.onChangeDisplayName}\r\n                        hasError = {this.state.errors.displayName && true}\r\n                        error = {this.state.errors.displayName}\r\n                    />\r\n                </div>\r\n                <div className = \"col-12 mb-3\">\r\n                    <Input \r\n                        label = \"User name\"\r\n                        placeholder = \"Your user name\" \r\n                        value = {this.state.username}\r\n                        onChange = {this.onChangeUsername}\r\n                        hasError = {this.state.errors.username && true}\r\n                        error = {this.state.errors.username}\r\n                    />\r\n                </div>\r\n                <div className = \"col-12 mb-3\">\r\n                    <Input \r\n                        label = \"Password\"\r\n                        placeholder = \"Your password\"\r\n                        type = \"password\"\r\n                        value = {this.state.password}\r\n                        onChange = {this.onChangePassword}\r\n                        hasError = {this.state.errors.password && true}\r\n                        error = {this.state.errors.password}\r\n                    />\r\n                </div>\r\n                <div className = \"col-12 mb-3\">\r\n                    <Input \r\n                        label = \"Repeat your password\"\r\n                        placeholder = \"Repeat your password\"\r\n                        type = \"password\"\r\n                        value = {this.state.repeatedPassword}\r\n                        onChange = {this.onChangeRepeatPassword}\r\n                        hasError = {this.state.errors.repeatedPassword && true}\r\n                        error = {this.state.errors.repeatedPassword}\r\n                    />\r\n                </div>\r\n                <div className = \"text-center\">\r\n                    <ButtonWithProgress\r\n                        onClick = {this.onClickSignup}\r\n                        disabled = {this.state.pendingApiCall || !this.state.passwordRepeatConfirmed}\r\n                        pendingApiCall = {this.state.pendingApiCall}\r\n                        text = 'Sign up'\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserSignupPage.defaultProps = {\r\n    actions: {\r\n        postSignup: () => \r\n            new Promise((resolve, reject) => {\r\n                resolve({});\r\n        })\r\n    },\r\n    history: {\r\n        push: () => {}\r\n    }\r\n}\r\n\r\nexport default connect()(UserSignupPage);"]},"metadata":{},"sourceType":"module"}