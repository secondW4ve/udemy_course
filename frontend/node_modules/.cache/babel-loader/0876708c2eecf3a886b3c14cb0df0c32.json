{"ast":null,"code":"var _jsxFileName = \"U:\\\\Java\\\\WaverApp\\\\frontend\\\\src\\\\Components\\\\WaveSubmit.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ProfileImage from './ProfileImage';\nimport * as apiCalls from '../api/apiCalls';\nimport ButtonWithProgress from './ButtonWithProgress';\n\nclass WaveSubmit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      focused: false,\n      content: undefined,\n      pendingApiCall: false,\n      errors: {}\n    };\n\n    this.onFocus = () => {\n      this.setState({\n        focused: true\n      });\n    };\n\n    this.onClickExtinguishWave = () => {\n      this.setState({\n        focused: false,\n        content: '',\n        errors: {}\n      });\n    };\n\n    this.onChangeContent = event => {\n      const value = event.target.value;\n      this.setState({\n        content: value,\n        errors: {}\n      });\n    };\n\n    this.onClickRunWave = () => {\n      const body = {\n        content: this.state.content\n      };\n      this.setState({\n        pendingApiCall: true\n      });\n      apiCalls.postWave(body).then(response => {\n        this.setState({\n          focused: false,\n          content: '',\n          pendingApiCall: false\n        });\n      }).catch(error => {\n        let errors = {};\n\n        if (error.response.data && error.response.data.validationErrors) {\n          errors = error.response.data.validationErrors;\n        }\n\n        this.setState({\n          pendingApiCall: false,\n          errors\n        });\n      });\n    };\n  }\n\n  render() {\n    let textAreaClassName = \"form-control w-100\";\n\n    if (this.state.errors.content) {\n      textAreaClassName += \" is-invalid\";\n    }\n\n    return React.createElement(\"div\", {\n      className: \"card d-flex flex-row p-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(ProfileImage, {\n      className: \"rounded-circle m-1\",\n      width: \"32\",\n      height: \"32\",\n      image: this.props.loggedInUser.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"flex-fill\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"textarea\", {\n      className: textAreaClassName,\n      rows: this.state.focused ? 3 : 1,\n      onFocus: this.onFocus,\n      value: this.state.content,\n      onChange: this.onChangeContent,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), this.state.errors.content && React.createElement(\"span\", {\n      className: \"invalid-feedback\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, this.state.errors.content), this.state.focused && React.createElement(\"div\", {\n      className: \"text-right mt-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(ButtonWithProgress, {\n      className: \"btn btn-success\",\n      onClick: this.onClickRunWave,\n      disabled: this.state.pendingApiCall,\n      pendingApiCall: this.state.pendingApiCall,\n      text: \"Run wave\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-light ml-1\",\n      onClick: this.onClickExtinguishWave,\n      disabled: this.state.pendingApiCall,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Extinguish wave\"))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    loggedInUser: state\n  };\n};\n\nexport default connect(mapStateToProps)(WaveSubmit);","map":{"version":3,"sources":["U:/Java/WaverApp/frontend/src/Components/WaveSubmit.js"],"names":["React","Component","connect","ProfileImage","apiCalls","ButtonWithProgress","WaveSubmit","state","focused","content","undefined","pendingApiCall","errors","onFocus","setState","onClickExtinguishWave","onChangeContent","event","value","target","onClickRunWave","body","postWave","then","response","catch","error","data","validationErrors","render","textAreaClassName","props","loggedInUser","image","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport ProfileImage from './ProfileImage';\r\nimport * as apiCalls from '../api/apiCalls';\r\nimport ButtonWithProgress from './ButtonWithProgress';\r\n\r\nclass WaveSubmit extends Component {\r\n\r\n    state = {\r\n        focused: false,\r\n        content: undefined,\r\n        pendingApiCall: false,\r\n        errors: {}\r\n    }\r\n\r\n    onFocus = () => {\r\n        this.setState({focused: true});\r\n    }\r\n\r\n    onClickExtinguishWave = () => {\r\n        this.setState({\r\n            focused: false,\r\n            content: '',\r\n            errors: {},\r\n        });\r\n    }\r\n\r\n    onChangeContent = (event) => {\r\n        const value = event.target.value;\r\n        this.setState({content: value, errors: {}});\r\n    }\r\n\r\n    onClickRunWave = () => {\r\n        const body = {\r\n            content: this.state.content,\r\n        };\r\n        this.setState({pendingApiCall: true});\r\n        apiCalls.postWave(body)\r\n            .then((response) => {\r\n                this.setState({\r\n                    focused: false,\r\n                    content: '',\r\n                    pendingApiCall: false,\r\n                });\r\n            })\r\n            .catch((error) => {\r\n                let errors = {}\r\n                if (error.response.data && error.response.data.validationErrors){\r\n                    errors = error.response.data.validationErrors;\r\n                }\r\n                this.setState({\r\n                    pendingApiCall: false,\r\n                    errors,\r\n                });\r\n            });\r\n    }\r\n\r\n    render() {\r\n        let textAreaClassName = \"form-control w-100\";\r\n        if (this.state.errors.content){\r\n            textAreaClassName += \" is-invalid\"\r\n        }\r\n        return (\r\n            <div className = \"card d-flex flex-row p-1\">\r\n                <ProfileImage\r\n                    className = \"rounded-circle m-1\"\r\n                    width = \"32\"\r\n                    height = \"32\"\r\n                    image = {this.props.loggedInUser.image}\r\n                />\r\n                <div className = \"flex-fill\">\r\n                    <textarea \r\n                        className = {textAreaClassName} \r\n                        rows = {this.state.focused ? 3 : 1}\r\n                        onFocus = {this.onFocus}\r\n                        value = {this.state.content}\r\n                        onChange = {this.onChangeContent}\r\n                    /> \r\n                    {this.state.errors.content && (<span className = \"invalid-feedback\">{this.state.errors.content}</span>)}\r\n                    {this.state.focused && (\r\n                        <div className = \"text-right mt-1\">\r\n                            <ButtonWithProgress \r\n                                className = \"btn btn-success\"\r\n                                onClick = {this.onClickRunWave}    \r\n                                disabled = {this.state.pendingApiCall}\r\n                                pendingApiCall = {this.state.pendingApiCall}\r\n                                text = \"Run wave\"\r\n                            >\r\n                            </ButtonWithProgress>  \r\n                            <button \r\n                                className = \"btn btn-light ml-1\" \r\n                                onClick = {this.onClickExtinguishWave}\r\n                                disabled = {this.state.pendingApiCall}\r\n                            >\r\n                                Extinguish wave\r\n                            </button>\r\n                        </div>  \r\n                    )}\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(WaveSubmit);"]},"metadata":{},"sourceType":"module"}